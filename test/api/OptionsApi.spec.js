/**
 * Intrinio API
 * Welcome to the Intrinio API! Through our Financial Data Marketplace, we offer a wide selection of financial data feed APIs sourced by our own proprietary processes as well as from many data vendors. For a complete API request / response reference please view the [Intrinio API documentation](https://intrinio.com/documentation/api_v2). If you need additional help in using the API, please visit the [Intrinio website](https://intrinio.com) and click on the chat icon in the lower right corner.
 *
 * OpenAPI spec version: 2.17.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.intrinioSDK);
  }
}(this, function(expect, intrinioSDK) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new intrinioSDK.OptionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OptionsApi', function() {
    describe('getOptions', function() {
      it('should call getOptions successfully', function(done) {
        //uncomment below and update the code to test getOptions
        //instance.getOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOptionsChain', function() {
      it('should call getOptionsChain successfully', function(done) {
        //uncomment below and update the code to test getOptionsChain
        //instance.getOptionsChain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOptionsChainRealtime', function() {
      it('should call getOptionsChainRealtime successfully', function(done) {
        //uncomment below and update the code to test getOptionsChainRealtime
        //instance.getOptionsChainRealtime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOptionsExpirations', function() {
      it('should call getOptionsExpirations successfully', function(done) {
        //uncomment below and update the code to test getOptionsExpirations
        //instance.getOptionsExpirations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOptionsPrices', function() {
      it('should call getOptionsPrices successfully', function(done) {
        //uncomment below and update the code to test getOptionsPrices
        //instance.getOptionsPrices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOptionsPricesRealtime', function() {
      it('should call getOptionsPricesRealtime successfully', function(done) {
        //uncomment below and update the code to test getOptionsPricesRealtime
        //instance.getOptionsPricesRealtime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOptionsStatsRealtime', function() {
      it('should call getOptionsStatsRealtime successfully', function(done) {
        //uncomment below and update the code to test getOptionsStatsRealtime
        //instance.getOptionsStatsRealtime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
